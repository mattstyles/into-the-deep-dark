#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const budo = require('budo')
const less = require('simple-less-middleware')
const argv = require('minimist')(process.argv.slice(2), {
  alias: {
    o: 'open'
  }
})

const entry = {
  js: 'src/main.js',
  html: 'src/index.html',
  less: 'src/styles.less',
  dir: 'src'
}
const out = {
  css: 'styles.css'
}

budo(entry.js, {
  live: true,
  watchGlob: path.join(entry.dir, '**/*.{html,less,json,js}'),
  dir: entry.dir,
  stream: process.stdout,
  middleware: less(entry.less, out.css, {
    compress: false,
    autoprefixer: 'last 2 versions',
    paths: [
      path.join(__dirname, '../node_modules'),
      path.join(__dirname, '../src/core/styles'),
      path.join(__dirname, '../src')
    ]
  }),
  browserify: {
    extensions: ['.js', '.jsx']
  },
  defaultIndex: opt => fs.createReadStream(path.join(__dirname, '../', entry.html)),
  open: argv.open,
  host: '0.0.0.0',
  pushstate: true
})
  .on('error', err => console.error(err))
